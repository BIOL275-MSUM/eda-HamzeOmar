max = (longitude),
median = (longitude),
sem = mean + sqrt(sample_size)
)
select_St_Vars_grouped <- group_by(ebird_data, latitude, longitude, locality_type)
select_St_Vars_grouped
ebird_data_summarized <-
summarise(
select_St_Vars_grouped,
sample_size = n(),
mean = mean(latitude),
sd = sd(latitude),
var = var(latitude),
stderr = sd / sqrt(sample_size),
ci_upper = mean + 2 * stderr,
ci_lower = mean - 2 * stderr
)
'groups'
# Pick a state then count per county obs ----------------------------------
birds_2 <- filter(ebird_data, state == "Minnesota")
ggplot(data = birds_2, mapping = aes(x = latitude, y = longitude)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red")
count(birds_2, county)
ggplot(data = birds_2) +
geom_bar(mapping = aes(x = fct_infreq(county)), fill = "#C5351B",
width = .3) +
labs(x = "County", y = "Frequency (number of birds)") +
scale_y_continuous(limits = c(0, 125), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1),
axis.ticks.x = element_blank()
)
ggplot(data = birds_2) +
geom_bar(mapping = aes(x = fct_infreq(county)), fill = "#C5351B",
width = .3) +
labs(x = "County", y = "Frequency (number of birds)") +
scale_y_continuous(limits = c(0, 1000), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1),
axis.ticks.x = element_blank()
)
ggplot(data = birds_2) +
geom_bar(mapping = aes(x = fct_infreq(county)), fill = "#C5351B",
width = .3) +
labs(x = "County", y = "Frequency (number of birds)") +
scale_y_continuous(limits = c(0, 1050), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1),
axis.ticks.x = element_blank()
)
ggplot(data = birds_2) +
geom_bar(mapping = aes(x = fct_infreq(county)), fill = "#C5351B",
width = .3) +
labs(x = "County", y = "Frequency (number of birds)") +
scale_y_continuous(limits = c(0, 1250), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1),
axis.ticks.x = element_blank()
)
ggplot(data = birds_2) +
geom_bar(mapping = aes(x = fct_infreq(county)), fill = "#C5351B",
width = .3) +
labs(x = "County", y = "Frequency (number of birds)") +
scale_y_continuous(limits = c(0, 1250), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1.2),
axis.ticks.x = element_blank()
)
library(gridExtra)
library(lubridate)
library(psych)
library(tidyverse)
library(readr)
library(auk)
library(dplyr)
library(rnaturalearth)
f_in <- system.file("extdata/ebd-sample.txt", package = "auk")
f_in <- "Data/ebd_sedwre_relJan-2021/ebd_sedwre_relJan-2021.txt"
f_in <- "Data/ebd_sedwre_relJan-2021/ebd_sedwre_relJan-2021.txt"
f_out <- "ebd_filtered_sedwre.txt"
ebird_data <- f_in %>%
auk_ebd() %>%
auk_species(species = "Sedge Wren") %>%
auk_country(country = "US") %>% auk_date(date = c("2000-05-01", "2020-08-30")) %>%
auk_filter(file = f_out, overwrite = TRUE) %>% auk_complete() %>%
read_ebd()
ebird_data
ebird_data <- as_tibble(ebird_data)
ebird_data
map_world <-
borders(category = "species",
colour = "Green",
fill = "#585858")
ggplot() + map_world +
geom_point(
data = ebird_data,
aes(x = longitude,
y = latitude,
colour = "species"),
alpha = 0.6,
size = 2
) +
scale_color_brewer(palette = "Dark2") +
theme_classic() +
ylab(expression("Latitude (" * degree * ")")) +
xlab(expression("Longitude (" * degree * ")")) +
theme(legend.position = "top",
legend.title = element_text(colour = "Red", size = 5, face = "bold"))
ggplot(data = ebird_data) +
geom_hex(mapping = aes(x = latitude, y = longitude)) +
labs(y = "longitude") + facet_wrap( ~ month(observation_date))
count(ebird_data, state)
ggplot(data = ebird_data) +
geom_bar(mapping = aes(x = fct_infreq(state)), fill = "#C5351B",
width = .3) +
labs(x = "States", y = "Frequency (number of obs)") +
scale_y_continuous(limits = c(0, 25000), expand = expansion(mult = 0)) +
theme_classic(base_size = 6) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(1)),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.ticks.x = element_blank())
glimpse(ebird_data)
select_St_Vars <- select(ebird_data, latitude, longitude, locality_type)
select_St_Vars
summarise(
select_St_Vars,
sample_size = n(),
mean = (latitude),
max = (latitude),
median = (latitude),
sem = mean + sqrt(sample_size)
)
summarise(
select_St_Vars,
sample_size = n(),
mean = (longitude),
max = (longitude),
median = (longitude),
sem = mean + sqrt(sample_size)
)
summarise(
select_St_Vars,
sample_size = n(),
mean = (latitude, longitude),
max = (latitude, longitude),
median = (latitude, longitude),
sem = mean + sqrt(sample_size)
)
summarise(
select_St_Vars,
sample_size = n(),
mean = (latitude),
max = (latitude),
median = (latitude),
sem = mean + sqrt(sample_size)
)
summarise(
select_St_Vars,
sample_size = n(),
mean = (longitude),
max = (longitude),
median = (longitude),
sem = mean + sqrt(sample_size)
)
ebird_data_summarized <-
summarise(
select_St_Vars_grouped,
sample_size = n(),
mean = mean(latitude),
sd = sd(latitude),
var = var(latitude),
stderr = sd / sqrt(sample_size),
ci_upper = mean + 2 * stderr,
ci_lower = mean - 2 * stderr
)
'groups'
birds_2 <- filter(ebird_data, state == "Minnesota")
MN_birds <- filter(ebird_data, state == "Minnesota")
ggplot(data = MN_birds, mapping = aes(x = latitude, y = longitude)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red")
count(MN_birds, county)
ggplot(data = MN_birds) +
geom_bar(mapping = aes(x = fct_infreq(county)), fill = "#C5351B",
width = .3) +
labs(x = "County", y = "Frequency (number of birds)") +
scale_y_continuous(limits = c(0, 1250), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1.2),
axis.ticks.x = element_blank()
)
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red")
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red")
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red")
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red") +
scale_y_continuous(limits = c(0, 1250), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1.2),
axis.ticks.x = element_blank()
)
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red") +
scale_y_continuous(limits = c(0, 1250), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1.2),
axis.ticks.x = element_blank()
)
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red") + expand = expansion(mult = 0) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1.2),
axis.ticks.x = element_blank())
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red") + expand = expansion(mult = 0) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1.2),
axis.ticks.x = element_blank())
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red") + expand = expansion(mult = 0)
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red")
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.1, color = "Red")
View(MN_birds)
library(gridExtra)
library(lubridate)
library(psych)
library(tidyverse)
library(readr)
library(auk)
library(dplyr)
library(rnaturalearth)
Clay_birds <- filter(MN_birds, county == "Clay")
ggplot(data = Clay_birds, mapping = aes(x = latitude, y = longitude)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red")
ggplot(data = Clay_birds, mapping = aes(x = observation_date, y = longitude)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red")
ggplot(data = Clay_birds, mapping = aes(x = observation_date, y = longitude)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "purple")
auk_time(Clay_birds, start_time = c("06:00", "08:00"))
auk_time(Clay_birds)
Clay_filter_time(Clay_birds, observation_date = '2013-01-01' ~ '2013-12-31')
Clay_filter_time <- filter(Clay_birds, observation_date = '2013-01-01' ~ '2013-12-31')
Clay_filter_time <- filter(Clay_birds, observation_date == '2013-01-01' ~ '2013-12-31')
Clay_filter_time <- filter(Clay_birds, observation_date == '2013-01-01)
ggplot(data = MN_birds, mapping = aes(x = time_observations_started, y = locality_id)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.1, color = "Red")
# select and mutate -------------------------------------------------------
glimpse(ebird_data)
Summary_ebird <- select(ebird_data, latitude, longitude, locality_type)
Summary_ebird
summarise(
Summary_ebird,
sample_size = n(),
mean = (latitude),
max = (latitude),
median = (latitude),
sem = mean + sqrt(sample_size)
)
summarise(
Summary_ebird,
sample_size = n(),
mean = (longitude),
max = (longitude),
median = (longitude),
sem = mean + sqrt(sample_size)
)
# mutate ------------------------------------------------------------------
ebird_data <- mutate(observation_date = month())
# filter the data ---------------------------------------------------------
ggplot(data = birds_2, mapping = aes(x = locality_id, y = observation_date)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red")
ggplot(data= birds_2) +
geom_jitter(mapping= aes(y = observation_date, x = locality_id, color = "species"))+
labs(y= "longitude")
ggplot(data = birds_2, aes(x = observation_date , y = time_observations_started)) +
geom_point() +
labs(x = "Date",
y = "species",
title = "Bird Data",
subtitle = "Sedge Wren, Minnesota 2020")
ggplot(data = birds_2, aes(x = observation_date, y = latitude)) +
geom_jitter(stat = "identity", fill = "purple") +
labs(title = "Sedge Wren, Minnesota",
subtitle = "Date from 2020",
x = "Date", y = "species")
count(birds_2, county)
ggplot(data = birds_2) +
geom_bar(mapping = aes(x = fct_infreq(county)), fill = "#C5351B",
width = .3) +
labs(x = "County", y = "Frequency (number of birds)") +
scale_y_continuous(limits = c(0, 125), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1),
axis.ticks.x = element_blank()
)
..
count(birds_2, time_observations_started)
ggplot(data = birds_2) +
geom_bar(mapping = aes(x = fct_infreq(time_observations_started)), fill = "#C5351B",
width = .3) +
labs(x = "time observations started", y = "Frequency (number of birds)") +
scale_y_continuous(limits = c(0, 40), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.ticks.x = element_blank()
)
...
yearly_obs <- birds_2 %>% count(year = observation_date)
ggplot(data = yearly_obs, aes(x = year, y = n)) + geom_line()
breaks <- 0:24
labels <- breaks[-length(breaks)] + diff(breaks) / 2
birds_3 <- birds_2 %>%
mutate(tod_bins = cut(time_observations_started,
breaks = breaks,
labels = labels,
include.lowest = TRUE),
tod_bins = as.numeric(as.character(tod_bins))) %>%
group_by(tod_bins) %>%
summarise(n_checklists = n(),
n_distinct = sum(number_observers),
det_freq = mean(number_observers))
# Histogram ---------------------------------------------------------------
ggplot(birds_3) +
aes(x = tod_bins, y = n_checklists) +
geom_segment(aes(xend = n_distinct, y = 0, yend = n_checklists),
color = "grey50") +
geom_point() +
scale_x_continuous(breaks = 0:5) +
scale_y_continuous(labels = scales::comma) +
labs(x = "Checklist duration (hours)",
y = "# checklists",
title = "Distribution of checklist durations")
# freq_det ----------------------------------------------------------------
birds_3_freq <- ggplot(birds_3 %>% filter(n_checklists > 100)) +
aes(x = tod_bins, y = det_freq) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(0, 24, by = 3), limits = c(0, 24)) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Hours since midnight",
y = "% checklists with detections",
title = "Detection frequency")
grid.arrange(birds_3, birds_3_freq)
distinct(birds_2, time_observations_started)
count(birds_2, time_observations_started)
ggplot(data = birds_2) +
geom_bar(mapping = aes(x = fct_infreq(time_observations_started)), fill = "#C5351B",
width = .5) +
labs(x = "time_observations_started", y = "Frequency (number of birds)") +
scale_y_continuous(limits = c(0, 300), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(1)),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.ticks.x = element_blank()
)
ggplot(data = birds_2) +
geom_bar(mapping = aes(x = number_observers), StatBin = 50,
boundary = 1, closed = "left",
fill = "#C5351B", color = "black") +
labs(x = "latitude", y = "Frequency (number of species)") +
scale_y_continuous(breaks = seq(0, 50, 100), limits = c(0, 100),
expand = expansion(mult = 0)) +
scale_x_continuous(breaks = seq(0, 10, 100)) +
theme_classic() +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "grey", size = rel(1))
)
ebird_data <- filter(ebird_data, country_code == "US") %>%
# just keep the seasonal definition columns
select(setdiff(matches("(start)|(end)"), matches("year_round"))) %>%
# transpose
gather("label", "date") %>%
# spread data so start and end dates are in separate columns
separate(label, c("season", "start_end"), "_(?=s|e)") %>%
spread(start_end, date) %>%
select(season, start_dt, end_dt)
# did the season pass review
ebird_data <- mutate(ebird_data, pass = !(is.na(state.area)))
# Graph for quick glimpse -------------------------------------------------
read_ebd %>%
dplyr::mutate(year = lubridate::year(observation_date)) %>%
ggplot() +
geom_bar(aes(year))  +
hrbrthemes::theme_ipsum(
base_size = 12,
axis_title_size = 12,
axis_text_size = 12)
# convert time ------------------------------------------------------------
time_to_decimal <- function(x) {
x <- hms(x, quiet = TRUE)
hour(x) + minute(x) / 60 + second(x) / 3600}
Clay_filter_time <- filter(Clay_birds, observation_date == 2013-01-01)
Clay_filter_time <- filter(Clay_birds, observation_date == 2013-01-01)
Clay_filter_time <- filter(Clay_birds, observation_date == 2020-04-01, 2020-09-30)
Clay_filter_time
ggplot(data = Clay_filter_time, mapping = aes(x = observation_date, y = longitude)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "purple")
ggplot(data = Clay_filter_time, mapping = aes(x = observation_date, y = longitude)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "purple")
Clay_birds <- filter(MN_birds, county == "Clay")
ggplot(data = Clay_birds, mapping = aes(x = observation_date, y = longitude)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "purple")
Clay_filter_time <- filter(Clay_birds, observation_date == 2020-04-01, 2020-09-30)
Clay_filter_time
ggplot(data = Clay_filter_time, mapping = aes(x = observation_date, y = longitude)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "purple")
glimpse(ebird_data)
MN_birds <- filter(ebird_data, state == "Minnesota")
ggplot(data = MN_birds, mapping = aes(x = latitude, y = longitude)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "Red")
count(MN_birds, county)
ggplot(data = MN_birds) +
geom_bar(mapping = aes(x = fct_infreq(county)), fill = "#C5351B",
width = .3) +
labs(x = "County", y = "Frequency (number of birds)") +
scale_y_continuous(limits = c(0, 1250), expand = expansion(mult = 0)) +
theme_classic(base_size = 12) +
theme(
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "black", size = rel(0.5)),
axis.text.x = element_text(angle = 75, hjust = 1.2),
axis.ticks.x = element_blank()
)
library(gridExtra)
library(lubridate)
library(psych)
library(tidyverse)
library(readr)
library(auk)
library(dplyr)
library(rnaturalearth)
f_in <- system.file("extdata/ebd-sample.txt", package = "auk")
f_in <- "Data/ebd_sedwre_relJan-2021/ebd_sedwre_relJan-2021.txt"
f_in <- "Data/ebd_sedwre_relJan-2021/ebd_sedwre_relJan-2021.txt"
f_out <- "ebd_filtered_sedwre.txt"
ebird_data <- f_in %>%
auk_ebd() %>%
auk_species(species = "Sedge Wren") %>%
auk_country(country = "US") %>% auk_date(date = c("2000-05-01", "2020-08-30")) %>%
auk_filter(file = f_out, overwrite = TRUE) %>% auk_complete() %>%
read_ebd()
remotes::install_github("CornellLabofOrnithology/auk")
install.packages("auk")
install.packages("maps")
install.packages("rnaturalearthdata")
